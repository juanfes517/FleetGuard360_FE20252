name: CI/CD
on: [push]

env:
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

jobs:
  build:
    name: Build and deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: "22"
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build

  Deploy-Dev:
    name: Deploy to vercel dev
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: "22"
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Install vercel cli
        run: npm install -g vercel
      - name: Pull environment variables
        run: vercel pull --yes --token=${{ env.VERCEL_TOKEN }}
      - name: Deploy
        run: vercel deploy --no-wait --token=${{ env.VERCEL_TOKEN }}

  Deploy-Prod:
    name: Deploy to vercel prod
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: "22"
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Install vercel cli
        run: npm install -g vercel
      - name: Pull environment variables
        run: vercel pull --yes --token=${{ env.VERCEL_TOKEN }}
      - name: Deploy
        run: vercel deploy --prod --no-wait --token=${{ env.VERCEL_TOKEN }}
